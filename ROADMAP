-----------------------------------------------------------------------------------------------------------------------------
                ROADMAP FOR LOG2TIMELINE
-----------------------------------------------------------------------------------------------------------------------------
This is the official dynamic and constantly flexible roadmap for log2timeline.

This roadmap is the current status of the roadmap and is in no way the final one, and can be changed dramatically very suddenly, 
or by implemented accordingly.  That being said, this is a dynamic roadmap, which represents the current ideas about the development
of the tool. Despite it's constant changes and updates it gives a pretty good picture of where log2timeline is headed and
what to expect in coming releasese.

Version 0.6x
    FIXES
  - EVT/EVTX skoda index typu og bera saman vid timastimpil til ad greina breytingar a tima, th.e hopp aftur i timann.
    - Vista nuverandi/sidasta tima og bera saman vid naesta.
  - Fix the engine so that when/if hashes are asked to be calculated and we are parsing the $MFT file we calculate the
      hash of the actual file inside the entry, not the $MFT file itself.
          - Or simply put in place a simple bypass, check if MFT then omit MD5 sum or indicate we were unable to calculate.
  - fix the ShellBag addition to ntuser, make it work properly (disabled in version 0.51)

    L2T_PROCESS
  - Remove from log2timeline.
  - Update the Debian repo so that it depends/suggests/recommends l2t-tools
      - includes the new version of l2t_process.

    THE TOOL ITSELF
  - Re-introduce the FORCE option.
      Works by "ignoring" the verification phase, and works only on a single file passed in (does nothing in recursive mode).
  - Complete the documentation inside all libraries (core) and perhaps an example input/output module.
  - Add a more broken down part of the description field into the timestamp object (thus making new output modules possible)
  - Add a one-to-one mapping between the timezone information provided by the registry vs. the one that is defined in DateTime
      - Has already been started, just add more zones here.
  - Go through some optimization
    - Mostly involves checking if DateTime can be replaced by other functions somewhere along the line
  - Add Unicode support (should be there, but just to improve it), and especially to "fix" importing timeline into Excel.... (might need UTF-16)
      - Unicode support is there, but in some places it is flaky or buggy, so just find all issues and fix them ;)

    OUTPUT MODULES
  - Fix SQLite output module, problems with it.
      - It's slow, and it seems to miss a lot of entries.
      - Use transactions instead of INSERT for every event.
      - Also prepare all statements (since we are re-using all statements over and over again).
      - Take a look at: http://stackoverflow.com/questions/1711631/how-do-i-improve-the-performance-of-sqlite
  - Create a new XML output module, using standard and optional fields (built around the timestamp object)
  - Add a more broken down part of the description field into the timestamp object and create a new SQLite output module
  that takes advantage of it, thus creating a separate table for each source type

  - Either to add a Cygwin detection or to include some disclaimer in the installation instructions to Windows users that have Cygwin that they
  do not need to remove the pcap module if they install it there

    PREPROCESSING
  - pre-processing
    - Add some more libraries into the pre-processing portion

    INPUT MODULES
  - Add more specific registry key parsing (software + system)
  - Add more IE Cookie support (parse the text files instead of only index.dat file)
  - Add a module for Thumbs.db file
  - Add Java IDX files
  - Add Opera history file support (binary files)
  - Add some Plist parsing, add Mac OS X artifacts into the tool
  - Add an input module for Word documents (older versions)
  - Add an input module for Cisco ACL entries
  - Add an input module for IPTables firewall entries
  - Fix the PCAP input module (collect connection information from TCP)
  - Add input modules for various anti-virus engines
  - Add input module for various remote administration tools (logmein, pcanywhere, vnc, ...)
  - Add support for MBOX files (input module - Mail::Box::Mbox )
  - Consider adding other mailbox support (consider to use a C library for PST/OST files, write a XS Perl library to map between)
  - Add MSN history files
  - Add Yahoo messenger history files
  - Add other IM's (Skype chat for instance)

Version 0.70
  - Add the capability to provide aliases for each input module (so that input modules can be called by their 
  aliases as well as their real names)
